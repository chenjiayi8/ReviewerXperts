version: "3"

services:
    reviewer:
        build:
            context: .
            dockerfile: ./docker/web/Dockerfile
            args:
                - DOCKER_UID=${DOCKER_UID}
                - DOCKER_GID=${DOCKER_GID}
        user: "${DOCKER_UID}:${DOCKER_GID}"
        container_name: reviewer
        hostname: reviewer
        restart: unless-stopped
        tty: true
        volumes:
            - .:/var/www/html/app

        command: bash -c './docker/web/entrypoint.sh'
        depends_on:
            - reviewer_mysql
        networks:
            - frontend
            - backend

    reviewer_mysql:
        image: mysql:8.0
        container_name: reviewer_mysql
        restart: unless-stopped
        tty: true
        user: "${DOCKER_UID}:${DOCKER_GID}"
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        volumes:
            - ./mysql/data:/var/lib/mysql
        networks:
            - backend

    reviewer_nginx:
        image: nginx:latest
        container_name: reviewer_nginx
        restart: unless-stopped
        tty: true
        volumes:
            - .:/var/www/html/app
            - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.reviewer_nginx.rule=Host(`localhost.com`)"
            - "traefik.http.routers.reviewer_nginx.entrypoints=web"

        networks:
            - frontend

    reviewer_traefik:
        image: traefik:latest
        container_name: reviewer_traefik
        command: --log.level=DEBUG
            --accesslog=true
            --api.insecure=true
            --api.dashboard=true
            --providers.docker=true
            --providers.docker.exposedbydefault=true
            --providers.docker.network=frontend
            --entryPoints.web.address=:80
        ports:
            - "80:80"
        restart: unless-stopped
        tty: true
        depends_on:
            - reviewer
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
            - frontend
networks:
    frontend:
        name: frontend
    backend:
        name: backend
